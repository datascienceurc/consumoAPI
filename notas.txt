
Instrucciones:


Consumir la API https://hp-api.onrender.com/api/characters
Mostrar la ficha de presentación de cada uno de los personajes con la información más representativa. Para la elaboración de las fichas puede hacer uso de bootstrap, materialize o cualquier otra librería externa, en su defecto mostrarlo a forma de tabla.
 Para los personajes que no cuenten con imagen, asignar una por defecto.
*Una vez obtenidas las fichas de todos  los personajes, será posible hacer un filtro de búsqueda mediante una caja de texto u opciones predefinidas. 
  Implementar un filtro de búsqueda que sólo muestre las coincidencias con base al texto mostrado en las fichas.
 Utilizando un Select mostrar sólo las fichas que cumplan con el criterio seleccionado. Ejemplo: Gryffindor, Hufflepuff, Ravenclaw y Slytherin.
Ejercicio B
  Consumir la API https://pokeapi.co/api/v2/pokemon/${param}, donde param puede tomar el valor de "id" o "name" del pokemon.
  Crear una interfaz que dé al usuario la opción de hacer la búsqueda por id de manera aleatoria (Considerar un rango del 1 al 150) o por nombre. Ejemplos:
Búsqueda por id: https://pokeapi.co/api/v2/pokemon/132
Búsqueda por nombre: https://pokeapi.co/api/v2/pokemon/ditto
Mostrar la ficha del pokémon con la información más representativa. Para la elaboración de la ficha puede hacer uso de bootstrap, materialize o cualquier otra librería externa, en su defecto elaborarla nativamente con HTML y CSS.
Colocar un botón para que despliegue más información detallada del pokémon (puede ser en un modal o una nueva página).
Colocar un botón para añadir el pokemon a una tabla, si el usuario así lo desea, se generará una fila dinámicamente por cada criatura añadida (Un máxim